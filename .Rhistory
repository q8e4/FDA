setwd("/home/kaliyev/FDA review")
q()
install.packages("fda", version = "6.1.8")
install.packages("rainbow", version = "3.8")
q()
install.packages("fdaoutlier", version = "0.2.1")
install.packages("mgcv")
install.packages("refund", version = "0.1-23")
install.packages("MFPCA", version = "1.3-10")
install.packages("fdasrvf")
install.packages("elasdics")
install.packages("fdANOVA", version = "1.0.0")
install.packages("multiFANOVA", version = "0.1.0")
install.packages("fdatest", version = "2.1.1")
install.packages("funHDDC", version = "2.3.1")
install.packages("https://cran.r-project.org/src/contrib/Archive/funHDDC/funHDDC_2.3.1.tar.gz", repos = NULL, type = "source")
install.packages("cluster", version = "2.1.1")
install.packages("mclust")
install.packages("GPFDA", version = "4.0.0")
q()
library(FuncNN)
"FuncNN" %in% rownames(installed.packages())
q()
install.packages("tensorflow")
install.packages("keras")
library(keras)
library(tensorflow)
install_tensorflow(version = "2.10", keras = "2.10")
install_tensorflow(version = "2.17.0", keras = "2.10")
library(tensorflow)
library(keras)
tf$constant("ayo!")
tf_version()
q()
install.packages("https://cran.r-project.org/src/contrib/Archive/FDboost/FDboost_0.3-1.tar.gz", repos = NULL, type = "source")
install.packages(c("mboost", "gamboostLSS", "stabs"))
install.packages("https://cran.r-project.org/src/contrib/Archive/FDboost/FDboost_0.3-1.tar.gz", repos = NULL, type = "source")
q()
library(tensorflow)

# Reinstall TensorFlow 2.12 (GPU version)
install_tensorflow(version = "2.12", type = "gpu")

library(tensorflow)

# Reinstall TensorFlow 2.12 (GPU version)
install_tensorflow(version = "2.17", type = "gpu")

q()
